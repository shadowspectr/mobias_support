from aiogram import Router, types
from aiogram.types import CallbackQuery
from keyboard import get_start_keyboard  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
from keyboard import get_app_keyboard
from keyboard import get_pay_keyboard
from keyboard import get_location_keyboard
from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.markdown import hbold


# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è callback query
callback_router = Router()

@callback_router.callback_query()
async def process_callback(callback: CallbackQuery):
    if callback.data == "get_product":
        app_links = [
            ("App Store", "https://apps.apple.com/us/app/%D0%BE%D0%B7%D0%BE%D0%BD-%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82-%D0%BC%D0%B0%D0%B3%D0%B0%D0%B7%D0%B8%D0%BD/id407804998"),
            ("Google Play", "https://play.google.com/store/apps/details?id=ru.ozon.app.android"),
            ("AppGallery", "https://appgallery.huawei.com/#/app/C100847609"),
            ("RuStore", "https://apps.rustore.ru/app/ru.ozon.app.android")
        ]
        
        app_links_text = "\n".join(f"<a href='{link}'>{name}</a>" for name, link in app_links)
        
        await callback.message.answer(
            f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–æ–π, —Å–∫–∞—á–∞–π—Ç–µ {hbold('–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ')}.\n\n"
            f"{app_links_text}",
            parse_mode="HTML"
        )

        instructions = [
            "–ù–∞–π–¥–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ –∫ –≤–∞–º, —É –Ω–∞—Å –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞:",
            "üìç  –ù–∞–π—Ç–∏ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏",
            "–î–æ–±–∞–≤—å—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–π—Å—è –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Ozon, –ø–µ—Ä–µ–π–¥—è –ø–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ",
            "–û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑, –¥–∞–ª—å—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∞–º–æ –≤–∞–º –ø–æ–¥—Å–∫–∞–∂–µ—Ç, –∫–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º!"
        ]

        await callback.message.answer(
            "\n\n".join(instructions),
            parse_mode="HTML",
            reply_markup=get_app_keyboard()
        )

    elif callback.data == "info":
        await callback.message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
            parse_mode="HTML",
            reply_markup= get_pay_keyboard()
        )
    

    elif callback.data == "set_bank_card":
        await callback.message.answer(
            "<b>üí∏–ü—Ä–∏–≤—è–∑–∞—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É</b>\n" 
            "1. –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</b> –≤—ã–±–µ—Ä–∏—Ç–µ <b>–ù–æ–≤–æ–π –∫–∞—Ä—Ç–æ–π</b> –∏ –Ω–∞–∂–º–∏—Ç–µ <b>–û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω</b>.\n"
            "2. –í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –æ–∫–Ω–µ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã –∏ CVV/CVC –∫–æ–¥.\n" 
            "3. –ù–∞–∂–º–∏—Ç–µ —Ä–æ–∑–æ–≤—É—é –∫–Ω–æ–ø–∫—É <b>–û–ø–ª–∞—Ç–∏—Ç—å</b>.\n" 
            "4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.\n",
            parse_mode="HTML"
        )
    
    elif callback.data == "set_sbp_card":
        await callback.message.answer(
            "<b>üí∏–°–ë–ü</b>\n" 
            "1. –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</b> –≤—ã–±–µ—Ä–∏—Ç–µ <b>–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π</b> –∏ –Ω–∞–∂–º–∏—Ç–µ <b>–û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω</b>.\n"
            "2. –û—Ç–∫—Ä–æ–π—Ç–µ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞ –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª <b>–ü–ª–∞—Ç–µ–∂–∏</b> –≤—ã–±–µ—Ä–∏—Ç–µ <b>–û–ø–ª–∞—Ç–∏—Ç—å –ø–æ QR-–∫–æ–¥—É</b>.\n" 
            "3. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É.\n" 
            "4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.\n",
            parse_mode="HTML"
        )

    elif callback.data  == "set_ozon_bank_card":
        await callback.message.answer(
            "<b>üí∏Ozon Bank</b>\n" 
            "1. –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</b> –≤—ã–±–µ—Ä–∏—Ç–µ <b>Ozon –∫–∞—Ä—Ç—É</b> –∏ –Ω–∞–∂–º–∏—Ç–µ <b>–û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω</b>.\n"
            "2. –í–≤–µ–¥–∏—Ç–µ 4-—Ö –∑–Ω–∞—á–Ω—ã–π –ø–∞—Ä–æ–ª—å –æ—Ç –∫–∞—Ä—Ç—ã Ozon –∏ –Ω–∞–∂–º–∏—Ç–µ <b>–û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω</b>.\n"  
            "4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.\n",
            parse_mode="HTML"
        )
    
    elif callback.data == "find_pickup":
        await callback.message.answer(
            "–ü—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—ë —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏ –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏!\n"
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –≤–∫–ª—é—á–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è '–ì–µ–æ–ª–æ–∫–∞—Ü–∏–∏' –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ",
            reply_markup=types.ReplyKeyboardMarkup(
                keyboard=[[types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é", request_location=True)]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )


    else:
        await callback.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
    
    # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback query, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await callback.answer()

