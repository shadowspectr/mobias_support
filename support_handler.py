# support_handler.py
import logging
from datetime import datetime
from aiogram import Router, types, Bot, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from keyboard import get_back_to_menu_keyboard, get_start_keyboard

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
SUPPORT_TICKETS_CHAT_ID = -4961897884  # ID –û–°–ù–û–í–ù–û–ô –ì–†–£–ü–ü–´ –ü–û–î–î–ï–†–ñ–ö–ò
ADMIN_USER_ID = 521620770 # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö

# --- –¢–ï–ö–°–¢–´ –ë–´–°–¢–†–´–• –û–¢–í–ï–¢–û–í (–º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∏–∑–º–µ–Ω–∏—Ç—å) ---
QUICK_RESPONSE_FIRST = """ü§ñ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! 

–í–∞—à –≤–æ–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–∫–æ—Ä–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—Å—è –∫ –¥–∏–∞–ª–æ–≥—É.

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ), –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—ë —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º."""

QUICK_RESPONSE_SECOND = """‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏–Ω—è—Ç–∞!

–û–∂–∏–¥–∞–π—Ç–µ, —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç."""

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ ---
class SupportConversation(StatesGroup):
    waiting_for_first_message = State()
    waiting_for_additional_info = State()

# --- –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ ---
# {user_id: support_chat_id}
active_dialogs = {}
# {support_chat_id: user_id} - –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
support_to_user_map = {}

router = Router()


# 1. –ù–ê–ß–ê–õ–û –î–ò–ê–õ–û–ì–ê: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
@router.message(F.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def start_support_dialog(message: types.Message, state: FSMContext):
    await state.clear() # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –≤ –¥—Ä—É–≥–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await message.answer(
        "üí¨ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ú–æ–∂–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ.",
        reply_markup=get_back_to_menu_keyboard()
    )
    await state.set_state(SupportConversation.waiting_for_first_message)


# 2. –ü–ï–†–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –ö–õ–ò–ï–ù–¢–ê: –ü—Ä–∏–µ–º –≤–æ–ø—Ä–æ—Å–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
@router.message(SupportConversation.waiting_for_first_message)
async def process_first_question(message: types.Message, state: FSMContext, bot: Bot):
    user = message.from_user
    ticket_id = f"T-{user.id}-{datetime.now().strftime('%H%M')}"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
    await state.update_data(ticket_id=ticket_id)

    ticket_caption = (
        f"üé´ <b>–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ #{ticket_id}</b>\n\n"
        f"üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {user.full_name}\n"
        f"üîó <b>Username:</b> @{user.username if user.username else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üÜî <b>User ID:</b> <code>{user.id}</code>"
    )

    try:
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞
        start_dialog_button = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="üí¨ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –∫–ª–∏–µ–Ω—Ç–æ–º",
                callback_data=f"start_dialog_{user.id}_{ticket_id}"
            )]
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-—Ç–∏–∫–µ—Ç –≤ –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        await bot.send_message(SUPPORT_TICKETS_CHAT_ID, ticket_caption, parse_mode="HTML")
        await message.copy_to(
            chat_id=SUPPORT_TICKETS_CHAT_ID,
            reply_markup=start_dialog_button
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
        await message.answer(QUICK_RESPONSE_FIRST)
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.set_state(SupportConversation.waiting_for_additional_info)
        logging.info(f"–°–æ–∑–¥–∞–Ω —Ç–∏–∫–µ—Ç {ticket_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")

    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç #{ticket_id} –¥–ª—è {user.id}: {e}")
        await bot.send_message(ADMIN_USER_ID, f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –¥–ª—è {user.id}: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        await state.clear()


# 3. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–¢ –ö–õ–ò–ï–ù–¢–ê
@router.message(SupportConversation.waiting_for_additional_info)
async def process_additional_info(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    ticket_id = data.get('ticket_id', 'N/A')
    
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≥—Ä—É–ø–ø—É
    try:
        await bot.send_message(
            SUPPORT_TICKETS_CHAT_ID,
            f"üìé <b>–î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —Ç–∏–∫–µ—Ç—É #{ticket_id}</b>"
        )
        await message.copy_to(chat_id=SUPPORT_TICKETS_CHAT_ID)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç
        await message.answer(QUICK_RESPONSE_SECOND, reply_markup=get_start_keyboard())
        logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–∏–∫–µ—Ç—É {ticket_id}")

    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å –¥–æ–ø. –∏–Ω—Ñ–æ –ø–æ —Ç–∏–∫–µ—Ç—É #{ticket_id}: {e}")
        await bot.send_message(ADMIN_USER_ID, f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –¥–æ–ø. –∏–Ω—Ñ–æ –¥–ª—è {ticket_id}: {e}")
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É.")

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç.–∫. –±–æ—Ç —Å–≤–æ—é –∑–∞–¥–∞—á—É –ø–æ —Å–±–æ—Ä—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏–ª
    await state.clear()


# 4. –°–û–¢–†–£–î–ù–ò–ö –ù–ê–ß–ò–ù–ê–ï–¢ –î–ò–ê–õ–û–ì: –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –≥—Ä—É–ø–ø–µ
@router.callback_query(F.data.startswith("start_dialog_"))
async def handle_start_dialog(callback: types.CallbackQuery, bot: Bot):
    _, user_id_str, ticket_id = callback.data.split("_")
    user_id = int(user_id_str)
    support_agent = callback.from_user

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–µ–¥–µ—Ç—Å—è –ª–∏ —É–∂–µ –¥–∏–∞–ª–æ–≥ —Å —ç—Ç–∏–º –∫–ª–∏–µ–Ω—Ç–æ–º
    if user_id in active_dialogs:
        await callback.answer("–î—Ä—É–≥–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–∂–µ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å —ç—Ç–∏–º –∫–ª–∏–µ–Ω—Ç–æ–º.", show_alert=True)
        return

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥
    active_dialogs[user_id] = support_agent.id
    support_to_user_map[support_agent.id] = user_id
    
    logging.info(f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫ {support_agent.id} –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –∫–ª–∏–µ–Ω—Ç–æ–º {user_id} (—Ç–∏–∫–µ—Ç {ticket_id})")

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, –∫—Ç–æ –≤–∑—è–ª —Ç–∏–∫–µ—Ç
    await callback.message.edit_text(
        f"{callback.message.text}\n\n"
        f"‚úÖ <b>–í —Ä–∞–±–æ—Ç–µ —É:</b> {support_agent.full_name} (@{support_agent.username or ''})",
        parse_mode="HTML"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞
    await bot.send_message(
        user_id,
        "üë®‚Äçüíº –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –° –≤–∞–º–∏ –Ω–∞ —Å–≤—è–∑–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤—Å–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∑–¥–µ—Å—å."
    )
    await bot.send_message(
        support_agent.id,
        f"–í—ã –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥ —Å –∫–ª–∏–µ–Ω—Ç–æ–º –ø–æ —Ç–∏–∫–µ—Ç—É #{ticket_id}.\n"
        f"–í—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –∫–ª–∏–µ–Ω—Ç—É.\n"
        f"–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: /end"
    )
    await callback.answer("–í—ã –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥. –ö–ª–∏–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω.")


# 5. –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ü–ï–†–ï–°–´–õ–ö–ò –°–û–û–ë–©–ï–ù–ò–ô
@router.message()
async def message_relay(message: types.Message, bot: Bot, state: FSMContext):
    # –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –¥–∏–∞–ª–æ–≥–µ
    if message.from_user.id in active_dialogs:
        support_chat_id = active_dialogs[message.from_user.id]
        try:
            await message.copy_to(chat_id=support_chat_id)
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ {message.from_user.id} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É {support_chat_id}: {e}")
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return

    # –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –≤–µ–¥–µ—Ç –¥–∏–∞–ª–æ–≥
    if message.from_user.id in support_to_user_map:
        user_id = support_to_user_map[message.from_user.id]

        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
        if message.text.lower() == '/end':
            # –£–¥–∞–ª—è–µ–º –¥–∏–∞–ª–æ–≥ –∏–∑ —Å–ª–æ–≤–∞—Ä–µ–π
            del active_dialogs[user_id]
            del support_to_user_map[message.from_user.id]
            
            await bot.send_message(user_id, "–î–∏–∞–ª–æ–≥ —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!")
            await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –¥–∏–∞–ª–æ–≥. –ß—Ç–æ–±—ã –≤–∑—è—Ç—å –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É.")
            logging.info(f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫ {message.from_user.id} –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥ —Å {user_id}")
            
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –≥—Ä—É–ø–ø—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            # await bot.send_message(SUPPORT_TICKETS_CHAT_ID, f"–î–∏–∞–ª–æ–≥ –ø–æ —Ç–∏–∫–µ—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–æ–º {user_id} –∑–∞–≤–µ—Ä—à–µ–Ω.")
            return

        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
        try:
            await message.copy_to(chat_id=user_id)
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {message.from_user.id} –∫–ª–∏–µ–Ω—Ç—É {user_id}: {e}")
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
        return
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ–ø–∞–ª–æ –Ω–∏ –≤ –æ–¥–Ω–æ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π FSM –∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤,
    # –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –≥–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫.
    # –î–ª—è —ç—Ç–æ–≥–æ –≤ main.py –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞—Ç—å fallback_handler.
    # –≠—Ç–æ—Ç return –Ω–µ–æ–±—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã aiogram –Ω–µ –∏—Å–∫–∞–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∞–ª—å—à–µ –ø–æ —Ü–µ–ø–æ—á–∫–µ.
    # –ï—Å–ª–∏ –∂–µ –º—ã —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã —Ç–∞–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏—Å—å –∫–∞–∫-—Ç–æ –µ—â–µ,
    # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å –ª–æ–≥–∏–∫—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —É–±—Ä–∞—Ç—å return.